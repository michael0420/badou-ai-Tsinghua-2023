#!/usr/bin/env python
# encoding=gbk

import cv2
import numpy as np
from matplotlib import pyplot as plt

'''
equalizeHist-直方图均衡化
函数原型：  equalizeHist(src, dst=None) #直方图均化的函数公式
src：图像矩阵（单通道图像）
dst: 这个是自己创建的新图像，默认即可
'''

# 获取灰度图像 灰度图也是叫单通道图像
img = cv2.imread("lenna.png", 1)
gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)  # bgr2gray灰度化的转化
#cv2.imshow("imge_gray", gray)

# 灰度图像直方图均衡化
dst = cv2.equalizeHist(gray)

#  计算直方图 ，手动计算出了直方图，在使用equalizeHist函数可以不需要手动计算直方图
hist = cv2.calcHist([dst], [0], None, [256], [0,256])


plt.figure()
plt.hist(dst.ravel(), 256)
plt.show()

cv2.imshow("W3 Histogram Equalization", np.hstack([gray, dst]))
cv2.waitKey(0)

'''
# 彩色图像直方图均衡化
img = cv2.imread("lenna.png", 1)
cv.imshow("src",img)

# 彩色图像均衡化，需要分解通道，对每个通道均衡化
（b, g, r) = cv.2split(img)
bH = cv2.equalizeHist(b)
gH = CV2.equalizeHist(g)
rH = cv2.equalizeHist(r)
# 合并每一个通道  H代表对直方图均匀化的缩写
result = cv2.merge((bH, gH, rH))
cv2.imshow("dst_rgb", result)

cv2.waitKey(0)



'''
